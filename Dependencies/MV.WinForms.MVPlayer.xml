<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MV.WinForms.MVPlayer</name>
    </assembly>
    <members>
        <member name="T:MV.DotNet.Common.MV_DecodingTypeEnum">
            <summary>
            Media Vault decoding type available options.\n
            Please read enum notes for details.\n
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_DecodingTypeEnum.MV_Auto">
            <summary>
            MV Engine will choose best decoding type automatically.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_DecodingTypeEnum.MV_YUV420P">
            <summary>
            Video frame is decoded into YUV420P format. This is software decoding type.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_DecodingTypeEnum.MV_RGBA">
            <summary>
            Video frame is decoded and converted into RGBA format. This is software decoding type.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_DecodingTypeEnum.MV_DXVA">
            <summary>
            Video frame is decoded via DXVA 2.0 hardware accelerator. This is hardware decoding type.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_DecodingTypeEnum.MV_D3D11VA">
            <summary>
            Video frame is decoded via DXVA11 hardware accelerator. This is hardware decoding type.
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_Manager">
            <summary>
            MV_Manager is singleton class.\n
            Use it to initialize Media Vault subsystem.\n
            Should be used at application start (initialize) and application finish (dispose resources).\n
            </summary>
        </member>
        <member name="P:MV.DotNet.Common.MV_Manager.IsInitialized">
            <summary>
            Get information if Media Vault engine is already initialized.
            </summary>
        </member>
        <member name="M:MV.DotNet.Common.MV_Manager.InitializeMediaVault">
            <summary>
            Initialize Media Vault Engine and loads all necessary dependencies.\n
            It should be called once at application start.\n
            You must call this method before using any Media Vault controls.\n
            Preferable it should be called before any user interface object will be created.\n
            </summary>
        </member>
        <member name="M:MV.DotNet.Common.MV_Manager.CloseMediaVault">
            <summary>
            Close Media Vault Engine and release all allocated resources.\n
            It should be called once on application exit\n
            </summary>
        </member>
        <member name="M:MV.DotNet.Common.MV_Manager.InitializeLog(System.String)">
            <summary>
            Initialize debug log with providen path.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MV.DotNet.Common.MV_Manager.DisposeLog">
            <summary>
            Release log.
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_MediaPositionChangedEventArgs">
            <summary>
            Position changed event arguemnts.
            </summary>
        </member>
        <member name="P:MV.DotNet.Common.MV_MediaPositionChangedEventArgs.Position">
            <summary>
            Gets current position in seconds.
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_MediaStateChangedEventArgs">
            <summary>
            Media state changed event arguemnts.
            </summary>
        </member>
        <member name="P:MV.DotNet.Common.MV_MediaStateChangedEventArgs.State">
            <summary>
            Gets current state of media player.
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_PlayerStateEnum">
            <summary>
            Possible player states enumeration.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.NotInitialized">
            <summary>
            Initial player state.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Paused">
            <summary>
            Player has loaded source and is paused.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Closed">
            <summary>
            Player released media resources and is in closed states.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Error">
            <summary>
            Player is in fault state. See log for details.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Playing">
            <summary>
            Player is playing media.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Seeking">
            <summary>
            Player currently is during seeking operation.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Stopped">
            <summary>
            Player is stopped.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Loading">
            <summary>
            Player is during loading source. Source is not ready at this stage.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_PlayerStateEnum.Finished">
            <summary>
            Player finished playing media stream stream.
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_RenderMode">
            <summary>
            Enumeration defines render mode for Media Vault Library
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_RenderMode.Composition">
            <summary>
            Player is bounded to display vsync and frame alignment is on.\n
            Expected screen redraw is equal to display refresh rate.\n
            This mode gives best playback quality, but has a little performance impact.\n
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_RenderMode.Immediate">
            <summary>
            Player is not bounded to any vsync composition or game loop.\n
            There is no any frame alignment and playback is based only on decoded position time stamps.\n
            This mode requires screen redraw only when new video frame is available.\n
            It has better performance but there is a little video playback quality penalty.\n
            </summary>
        </member>
        <member name="T:MV.DotNet.Common.MV_SizeMode">
            <summary>
            Video frame size mode enumeration.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_SizeMode.Stretch">
            <summary>
            Picture fits container size.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_SizeMode.AspectRatio">
            <summary>
            Picture fits container size but keeps aspect ratio.
            </summary>
        </member>
        <member name="F:MV.DotNet.Common.MV_SizeMode.Natural">
            <summary>
            Picture is displayed in natural size ignoring container size.
            </summary>
        </member>
        <member name="T:MV.DotNet.WinForms.MVPlayer.MVPlayer">
            <summary>
            Media Vault Player Control for WinForms.
            </summary>
        </member>
        <member name="T:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaStateChangedeHandler">
            <summary>
            Media state change handler.
            </summary>
            <param name="sender">Delegate sender.</param>
            <param name="e">State changed arguments.</param>
        </member>
        <member name="E:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaStateChanged">
            <summary>
            Event is fired when player state will change.
            </summary>
        </member>
        <member name="T:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaPositionChangedeHandler">
            <summary>
            Position changed handler.
            </summary>
            <param name="sender">Deledate sender.</param>
            <param name="e">Current position arguments.</param>
        </member>
        <member name="E:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaPositionChanged">
            <summary>
            Event is fired when position of media will change.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.#ctor">
            <summary>
            Create new instance of MVPlayer control.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.SizeMode">
            <summary>
            Gets or sets video size mode.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.PositionChangedStep">
            <summary>
            Defines ppsition change step.\n
            It defines period of time in seconds between media state changed events.\n
            Than higher than media position change events are fired less frequently.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.ShowFPS">
            <summary>
            When switched on FPS counter will be shown in your window title.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.Volume">
            <summary>
            Set volume of media stream.\n
            Value must be in range from 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaPosition">
            <summary>
            Gets current media position in seconds.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaDuration">
            <summary>
            Gets media duration in seconds.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.MediaState">
            <summary>
            Gets player current media state.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.DecodingType">
            <summary>
            Gets or sets player decoding mode.\n
            See enumeration description for more informations.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.VideoPanel">
            <summary>
            Gets video panel child.\n
            You can attach events to this panel.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.RenderMode">
            <summary>
            Gets or sets player render mode.\n
            See enumeration description for more details.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.HasVideo">
            <summary>
            Returns true if media contains video stream.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.HasAudio">
            <summary>
            Returns true if media contains audio stream.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.VideoWidth">
            <summary>
            Returns video width.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.MVPlayer.VideoHeight">
            <summary>
            Returns video height.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.OpenMedia(System.String)">
            <summary>
            Opens media.\n
            Wait for proper state following media state change event.
            </summary>
            <param name="PathOrUrl">It can be path to file or stream address.</param>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.OpenMedia(System.String,System.Int32,System.Int32)">
            <summary>
            Opens media.\n
            Wait for proper state following media state change event.
            </summary>
            <param name="PathOrUrl">It can be path to file or stream address</param>
            <param name="packetsBufferSize">Defines size of demuxer buffer.</param>
            <param name="framesBufferSize">Defines size of frames buffer.</param>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.OpenMediaAsync(System.String)">
            <summary>
            Opens media asynchronously.\n
            Wait for proper state following media state change event.
            </summary>
            <param name="PathOrUrl">It can be path to file or stream address.</param>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.OpenMediaAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Opens media asynchronously.\n
            Wait for proper state following media state change event.
            </summary>
            <param name="PathOrUrl">It can be path to file or stream address</param>
            <param name="packetsBufferSize">Defines size of demuxer buffer.</param>
            <param name="framesBufferSize">Defines size of frames buffer.</param>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.OpenSubtitles(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Open subtitles for rendering.\n
            Warning! This method can be called when mv player is added to parent!
            </summary>
            <param name="SubtitlesPath">Path to subtitle file. File must be UTF-8 charset. Supported subtitles formats are: SubRip(srt), MicroDVD, MPL2</param>
            <param name="fontPath">Path to font file. Font must be TTF format.</param>
            <param name="fontSize">Size of the font</param>
            <param name="outlineSize">Size of outline. Pass 0 to avoid rendering outline</param>
            <param name="margin">Size in pixels bottom margin of first subtitle line</param>
            <param name="lineSpace">Size in pixels the space between lines</param>
            <param name="fontColor">Font color. Can not be empty.</param>
            <param name="backColor">Color of background. Pass color empty to make background transparent</param>
            <param name="outlineColor">Color of outline. Pass colort empty to make outline transparent</param>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.Play">
            <summary>
            Starts playback.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.Pause">
            <summary>
            Pauses playback.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.Stop">
            <summary>
            Stops playback.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.Close">
            <summary>
            Closes media resources and releases memory.\
            Warning! Call dispose method to fully release memory when control is not needed anymore.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:MV.DotNet.WinForms.MVPlayer.MVPlayer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MV.DotNet.WinForms.MVPlayer.MVPlayer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MV.DotNet.WinForms.MVPlayer.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MV.DotNet.WinForms.MVPlayer.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
